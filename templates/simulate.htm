<!-- extends layout.html이 base 템플릿! extends는 항상 젤 처음에 와야함 -->
{% extends 'layout.html' %}

{% block content %}
<ul id="tabs" class="nav nav-tabs" role="tablist">
  <li role="presentation" id="summary-tab" class="summary-tab">
    <a href="#summary-panel" aria-controls="settings" role="tab" data-toggle="tab">Summary</a>
  </li>
  <li role="presentation" id="chart-tab" class="chart-tab active">
      <!-- 같은 문서 내에서 가리키는 id #tab1 -->
    <a href="#tab1" aria-controls="settings" role="tab" data-toggle="tab">Chart 1</a>
  </li>
</ul>

<div class="tab-content">
    <div role="tabpanel" class="tab-pane fade" id="summary-panel" class="summary-tab">
        <div class="chart-container">
            <div>
                Summary Tab.
            </div>
        </div>
    </div>

    <div role="tabpanel" class="tab-pane fade in active" id="tab1" class="chart-tab">
        <div class="chart-container">
            <div class="btn-group btn-group-sm" role="group">
                <button type="button" class="btn btn-default" id="btnPlay">Play</button>
                <button type="button" class="btn btn-default" id="btnStop">Stop</button>
                <button type="button" class="btn btn-default" id="btnNext">Next 100</button>
                <button type="button" class="btn btn-default" id="btnPrev">Prev 100</button>
            </div>

            <button type="button" id="sidebarCollapse" class="btn btn-sm btn-info">
                    <i class="fas fa-align-left"></i>
                    <span>Toggle Sidebar</span>
            </button>

            <div id="container"></div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script type="text/javascript">
    var chart, data;
    var index = 0;
    var isPlaying = false;

    function addPoint(n) {
        for (var i=0;i<n;i++)
        {
            if(index + 1 >= data.length) break;

            var candle = [
                data[index]['min_15']['added']['candlestick']['data'][1], // the date
                data[index]['min_15']['added']['candlestick']['data'][2], // the open
                data[index]['min_15']['added']['candlestick']['data'][3], // the high
                data[index]['min_15']['added']['candlestick']['data'][4], // the low
                data[index]['min_15']['added']['candlestick']['data'][5], // the close
            ];
            var volume = [
                data[index]['min_15']['added']['candlestick']['data'][1], // the date
                data[index]['min_15']['added']['candlestick']['data'][6], // the volume
            ];

            chart.get('candlestick').addPoint(candle, false, false);
            chart.get('volume').addPoint(volume, false, false); // 임시로 volume 추가, 이후에는 'added'안의 key를 탐색해서 동적 추가를 해주어야 함.

            index++;
        }
        chart.redraw();
    }

    function removePoint(n) {
        var nextIndex = index - n < 0 ? 0 : index - n;
        var _date = data[nextIndex]['min_15']['added']['candlestick']['data'][1];
        var nSeries = chart.series.length;

        for(var i=0;i<nSeries;i++) {
            var series = chart.series[i];

            for(var j=series.data.length - 1;j>=0;j--) {
                try {
                    if (series.data[j].x > _date) {
                        series.removePoint(j, false, false);
                    }
                } catch(err) {
                    console.error(err);
                    console.error('series index : ', i);
                    console.error('series data : ', series.data);
                    console.error('j : ', j);
                    console.error('series point data : ', series.data[j]);
                }
            }
        }

        index = nextIndex;
        chart.redraw();
    }

    $(window).resize(function() {
        chart.update({
           chart: {
               height: $(window).height() - $('#tabs').height() - ($('.tab-content').height() - $('#container').height())
           }
        });
    });

    $('#sidebarCollapse').click(function() {
        chart.update({
           chart: {
               width: $(window).width() - ($('#sidebar').hasClass('active') ? 250 : 0)
           }
        });
    });

    $(document).ready(function () {
        setInterval(function () {
            if(isPlaying) {
                addPoint(1);
            }
        }, 500);
    });

    $('#btnPlay').click(function () {
        isPlaying = true;
    });
    $('#btnStop').click(function () {
        isPlaying = false;
    });

    $('#btnNext').click(function() {
        addPoint(100);
    });

    $('#btnPrev').click(function() {
        removePoint(100);
    });

    $.getJSON('/dummy.json', function (dummy) {
        data = dummy;
        console.log(data);
        // split the data set into ohlc and volume
        var ohlc = [],
            volume = [],
            dataLength = data.length,
            // set the allowed units for data grouping
            groupingUnits = [[
                'week',                         // unit name
                [1]                             // allowed multiples
            ], [
                'month',
                [1, 2, 3, 4, 6]
            ]];

        // create the chart
        Highcharts.seriesTypes.column.prototype.pointAttribs = (function (func) {
            return function (point, state) {
                var attribs = func.apply(this, arguments);

                var candlePoint = this.chart.series[0].data[point.index];
                var color = (candlePoint.open < candlePoint.close) ? '#E71909' : '#115BCB';
                attribs.fill = state == 'hover' ? Highcharts.Color(color).brighten(0.3).get() : color;

                return attribs;
            };
        }(Highcharts.seriesTypes.column.prototype.pointAttribs));

        chart = Highcharts.stockChart('container', {
            chart: {
                events: {
                    redraw: function () {
                    }
                },
                height: $(window).height() - $('#tabs').height() - $('.tab-content').height()
            },
            rangeSelector: {
                selected: 1
            },

            title: {
                text: 'CLJ19'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '80%',
                lineWidth: 2,
                resize: {
                    enabled: true
                }
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '85%',
                height: '15%',
                offset: 0,
                lineWidth: 2
            }],

            tooltip: {
                split: true
            },

            plotOptions: {
                candlestick: {
                    color: '#115BCB',
                    lineColor: '#115BCB',
                    upColor: '#E71909',
                    upLineColor: '#E71909',
                    pointPadding: 0.2,
                    groupPadding: 0,
                },
                column: {
                    color: '#2E2E2E',
                    pointPadding: 0.2,
                    groupPadding: 0,
                }
            },

            series: [{
                type: 'candlestick',
                name: 'CLJ19',
                id: 'candlestick',
                data: ohlc,
                dataGrouping: {
                    enabled: false
                }
            }, {
                type: 'column',
                name: 'Volume',
                id: 'volume',
                data: volume,
                yAxis: 1,
                dataGrouping: {
                    enabled: false
                }
            }]
        });

        addPoint(100);
    });
</script>
{% endblock %}